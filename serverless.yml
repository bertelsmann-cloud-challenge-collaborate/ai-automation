service: website
provider:
  name: aws
  runtime: python3.6
  environment:
    DYNAMODB_TABLE: SentimentReview
  apiGateway:
    restApiId:
      'Fn::ImportValue': apiGateway-restApiId
    restApiRootResourceId:
      'Fn::ImportValue': apiGateway-rootResourceId
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE}"
plugins:
  - serverless-offline
  - serverless-s3-local
  - serverless-dynamodb-local
custom:
  serverless-offline:
    resourceRoutes: true
  s3:
    port: 8000
    directory: .
  dynamodb:
    stages:
      - dev
    start:
      port: 8100
      #inMemory: false
      heapInitial: 200m
      heapMax: 1g
      migrate: true
      seed: true
      convertEmptyValues: true
resources:
  Resources:
    Bucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: local-bucket
        WebsiteConfiguration:
          IndexDocument: index.html
    SentimentTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: SentimentReview
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
    GetSentimentResource:
      Type: AWS::ApiGateway::Resource
      Properties:
        ParentId:
          Fn::GetAtt:
            - ApiGatewayRestApi
            - RootResourceId
        PathPart: getSentiment
        RestApiId:
          Ref: ApiGatewayRestApi
    GetSentimentMethod:
      Type: AWS::ApiGateway::Method
      Properties:
        ResourceId:
          Ref: GetSentimentResource
        RestApiId:
          Ref: ApiGatewayRestApi
        HttpMethod: POST
        MethodResponses:
          - StatusCode: 200
        Integration:
          IntegrationHttpMethod: POST
          Type: HTTP_PROXY
          Uri: http://localhost:5000
          IntegrationResponses:
            - StatusCode: 200
functions:
  approve:
    handler: backend.handler
    events:
      - http: POST /setSentiment
        cors: true
  getCsv:
    handler: backend.csvhandler
    events:
      - http: GET /getCsv.csv
        cors: true      
  webhook:
    handler: handler.webhook
    events:
      - http:
        method: GET
  s3hook:
    handler: handler.s3hook
    events:
      - s3: local-bucket
        event: s3:*
